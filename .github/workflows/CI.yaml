name: CI/CD
env:
  docker_username: ${{ secrets.DOCKER_USERNAME }}
  docker_token: ${{ secrets.DOCKER_TOKEN }}
on:
  #  pull_request:
  #    branches:
  #    - main
  push:
jobs:
  Clone-down:
    name: golang clone down
    runs-on: ubuntu-latest
    steps:
      - name: checkout-step
        uses: actions/checkout@v2
      - name: upload code
        uses: actions/upload-artifact@v2
        with:
          name: code
          path: .
  Build:
    name: golang build
    runs-on: ubuntu-latest
    needs: Clone-down
    steps:
      - name: download code artifact for build
        uses: actions/download-artifact@v2
        with:
          name: code
          path: .
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17
      - name: build backend
        run: cd backend && go build
      - name: build frontend
        run: cd frontend && go build
  Test:
    name: golang test
    runs-on: ubuntu-latest
    needs: Clone-down
    steps:
      - name: download code artifact for test
        uses: actions/download-artifact@v2
        with:
          name: code
          path: .
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17
      - name: test
        run: cd frontend && go test
  CD-push:
    runs-on: ubuntu-latest
    needs: [Build, Test]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Build and push backend
        uses: docker/build-push-action@v2
        with:
          context: ./backend
          push: true
          tags: longu17/backend:${{ GITHUB.SHA }}
      - name: Build and push frontend
        uses: docker/build-push-action@v2
        with:
          context: ./frontend
          push: true
          tags: longu17/frontend:${{ GITHUB.SHA }}
  Deploy:
    name: deploy to cluster
    runs-on: self-hosted
    needs: [CD-push]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download new image version for frontend
        run: kubectl rollout restart deploy frontend
      - name: Download new image version for backend
        run: kubectl rollout restart deploy backend 
  curl:
    name: test deployment
    runs-on: ubuntu-latest
    steps:
    - name: curl
      uses: wei/curl@v1
      with:
        args: -X GET 35.187.168.211:30569
